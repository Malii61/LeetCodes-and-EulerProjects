https://leetcode.com/problems/container-with-most-water/

Problem:
You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.

Solution (Time Limit Exceeded):

 public class Solution
    {
        public int MaxArea(int[] height)
        {
            int max = 0;
            int area = 0;
            int h=0;
            for(int i = 0; i < height.Length-1; i++)
            {
                for(int j = 1; j < height.Length; j++)
                {
                    h = height[j] >= height[i] ? height[i] : height[j];
                    area = h * (j - i);
                    max = Math.Max(max, area);
                }
            }
            return max;
        }
    }


Solution 2 (Succeed):

public class Solution
    {
        public int MaxArea(int[] height)
        {
            int max = 0;
            int area = 0;
            int left = 0;
            int right = height.Length - 1;
            while(left<right)
            {
                int h = height[left] >= height[right] ? height[right] : height[left];
                area = h * (right - left);
                max = Math.Max(max, area);

                if (height[left] < height[right]) left++;
                else right--;
                
            }
            return max;
        }
    }
